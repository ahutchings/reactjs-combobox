{"name":"Reactjs-combobox","tagline":"Combo box built as React.js component","body":"[Combo box][wiki] built as [React.js][reactjs] component\r\n=======================================================================\r\n\r\n## Combobox component\r\nIt is same as dropdown list, but user can input value.\r\n\r\n### Usage\r\n```javascript\r\nvar data = [{label: \"First item\"}, {label: \"Second item\"}];\r\nvar combobox = React.renderComponent(\r\n    Combobox({data: data, defaultValue: \"First\"}),\r\n    document.getElementById('here')\r\n);\r\n```\r\n\r\n### Component properties\r\n\r\n  * **data** _{object[]}_ _*Required*_ - Array of objects\r\n      In objects must be defined \"label\" property, \r\n      value of that property will be showed in dropdown list\r\n  * **defaultValue=\"\"** _{string}_ - that value will be showed after initialization \r\n  * **disabled=false** _{boolean}_ - combobox may be disabled\r\n  * **onChange** _{function}_ - this function called on every change   \r\n  arguments:\r\n    - currentValue - of text field \r\n    - prevValue - of text field  \r\n\r\n  by default is empty function  \r\n  \r\n  * **filterFunc** _{function}_ - that function called for filter items from data property by textValue from user, after filter items showed as options in dropdown  \r\n  arguments: \r\n    - textValue - value from combobox text field\r\n    - item - from data property\r\n    - return true/false for show or hide item  \r\n  by default function is:\r\n```\r\nfunction(textValue, item){\r\n        var s = textValue.toLowerCase().replace(' ', '');\r\n        return item.label.toLowerCase().replace(' ', '').indexOf(s) >= 0;\r\n}    \r\n```\r\n\r\n### Component methods\r\n  * **open()** / **close()** - Open or close dropdown list\r\n  * **isClosed()** - Check that dropdown is closed\r\n  * **enable()** / **disable()** - Enable or disable component\r\n  * **isDisabled()** - Check component is disabled\r\n  * **setTextValue(**_string_**)** - Set component value \r\n  * **setData(**_object[]_**)** - Set component data, for dropdown list \r\n  * **value()** - Get component value (_object_ from data if user select option in dropdown list, or _string_ if user entered text)\r\n\r\n## ComboboxRemote component\r\nIt is subclass of [Combobox](#combobox), it can get data for dropdown list from remote source.\r\n\r\n### Properties\r\nAll [properties from Combobox](#component-properties) (but **filterFunc=_false_**) and:\r\n\r\n  * **url** _{string}_ - default url, which return data. Data must be same structure as in Combobox data property.\r\n  * **urlBuilder** _{function}_ - calls on every change, generate url for next request  \r\n  arguments: \r\n    - url - same as url property\r\n    - textValue - value from combobox text field\r\n    - return _{string}_ with new url  \r\n  by default function is:\r\n\r\n```javascript\r\nfunction(url, textValue) {\r\n    return url.replace('{}', textValue);\r\n}\r\n```\r\n\r\n  * **onSuccess** _{function}_ - calls on every successful response  \r\n  arguments: \r\n    - data - from response  \r\n    by default function is:\r\n\r\n```javascript\r\nfunction(data) {\r\n    this.refs.combobox.setData(data);\r\n}\r\n```\r\n\r\n  * **onError** _{function}_ - calls on every error response  \r\n  arguments: \r\n    - xhr - XMLHTTPRequest [jQuery superset](http://api.jquery.com/Types/#jqXHR)\r\n    - status - response status \r\n    - error - errorThrown  \r\n    by default function is:\r\n\r\n```javascript\r\nfunction(xhr, status, err) {\r\n    console.error(this.props.url, status, err.toString());\r\n}\r\n```\r\n\r\n### Component methods\r\nAll [methods from Combobox](#component-methods)\r\n\r\n## TODO\r\nsee [TODO.md](TODO.md)\r\n\r\n\r\n## Credits\r\nAuthor: [Aleksey Ostapenko](http://github.com/kbakba/)  \r\n\r\n[wiki]: http://en.wikipedia.org/wiki/Combo_box\r\n[reactjs]: http://facebook.github.io/react/\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}